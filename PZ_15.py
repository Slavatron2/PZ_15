#Приложение РАСПРЕДЕЛЕНИЕ ДОПОЛНИТЕЛЬНЫХ ОБЯЗАННОСТЕЙ для
#некоторой организации. БД должна содержать таблицу Обязанности со следующей
#структурой записи: ФИО работника, вид дополнительной работы, сумма оплаты, срок.
import sqlite3

def create_table():
    with sqlite3.connect('tasks.db') as conn:
        cursor = conn.cursor()
        cursor.execute('''CREATE TABLE IF NOT EXISTS Обязанности (
                            ФИО_работника TEXT,
                            вид_дополнительной_работы TEXT,
                            сумма_оплаты TEXT,
                            срок TEXT
                        );
                        ''')
        conn.commit()
    print("ready")

def add_task(ФИО_работника, вид_дополнительной_работы, сумма_оплаты, срок):
    with sqlite3.connect('tasks.db') as conn:
        cursor = conn.cursor()
        cursor.execute('''INSERT INTO Обязанности (ФИО_работника, вид_дополнительной_работы, сумма_оплаты, срок)
                      VALUES (?, ?, ?, ?)''', (ФИО_работника, вид_дополнительной_работы, сумма_оплаты, срок))
        conn.commit()

def show_tasks():
    with sqlite3.connect('tasks.db') as conn:
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM Обязанности')
        rows = cursor.fetchall()
        for row in rows:
            print(row)

def delete_all():
    with sqlite3.connect('tasks.db') as conn:
        cursor = conn.cursor()
        commands = """DELETE FROM Обязанности """
        cursor.execute(commands)
        conn.commit()

delete_all()
add_task("Манакова Ольга Петровна", "Учитель основ программирования", 60000, "31.05.2024")
add_task("Мельникова Мария Вячеславовна", "Учитель математики", 35000, "31.05.2024")
add_task("Кайханиди Виктор Викторович", "Связист", 45000, "31.05.2024")
add_task("Пивнева Мария Алексеевна", "Основы проектирования БД", 55000, "31.05.2024")
add_task("Швачич Дмитрий Сергеевич", "Учитель физкультуры", 30000, "31.05.2024")
add_task("Григорьева Лидия Филиповна", "Продавец бананов", 15000, "31.05.2024")
add_task("Пильгун Ирина Сергеевна", "Учитель истории", 40000, "31.05.2024")
add_task("Трищук Софья Артёмовна", "Архитектура аппаратных средств", 40000, "31.05.2024")
add_task("Прыгунова Татьяна Александровна", "Учитель иностранного языка", 45000, "31.05.2024")
add_task("Лебедева Мария Викторовна", "Учитель иностранного языка", 45000, "31.05.2024")
show_tasks()


